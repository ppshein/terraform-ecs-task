name: CI - Build and Test

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: sre/dev-nodejs-app

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.x

      - name: Terraform Format Check
        run: terraform fmt -check -recursive infrastructure/

      - name: Terraform Init - Core
        run: |
          cd infrastructure/core
          terraform init -backend=false

      - name: Terraform Validate - Core
        run: |
          cd infrastructure/core
          terraform validate

      - name: Terraform Init - DTAP
        run: |
          cd infrastructure/dtap
          terraform init -backend=false

      - name: Terraform Validate - DTAP
        run: |
          cd infrastructure/dtap
          terraform validate

  docker-build:
    name: Docker Build and Test
    runs-on: ubuntu-latest
    needs: [security-scan, terraform-validate]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          cd apps
          docker build --build-arg certificatePassword=testPassword123 -t test-app:${{ github.sha }} .

      - name: Test Docker image
        run: |
          # Start container in background
          docker run -d --name test-container -p 443:443 test-app:${{ github.sha }}
          
          # Wait for container to start
          sleep 10
          
          # Test health endpoint (skip TLS verification for testing)
          curl -k -f https://localhost:443/health || exit 1
          
          # Cleanup
          docker stop test-container
          docker rm test-container

  security-container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image for scanning
        run: |
          cd apps
          docker build --build-arg certificatePassword=testPassword123 -t scan-app:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner on container
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'scan-app:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-container-results.sarif'

      - name: Upload container scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-container-results.sarif'